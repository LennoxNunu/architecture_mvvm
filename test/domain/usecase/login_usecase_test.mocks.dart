// Mocks generated by Mockito 5.3.0 from annotations
// in architecture_mvvm/test/domain/usecase/login_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:architecture_mvvm/core/devicedetails/device_details.dart'
    as _i3;
import 'package:architecture_mvvm/domain/model/model.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDeviceInfo_0 extends _i1.SmartFake implements _i2.DeviceInfo {
  _FakeDeviceInfo_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [DeviceDetails].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeviceDetails extends _i1.Mock implements _i3.DeviceDetails {
  @override
  _i4.Future<_i2.DeviceInfo> getDeviceDetails() => (super.noSuchMethod(
      Invocation.method(#getDeviceDetails, []),
      returnValue: _i4.Future<_i2.DeviceInfo>.value(
          _FakeDeviceInfo_0(this, Invocation.method(#getDeviceDetails, []))),
      returnValueForMissingStub: _i4.Future<_i2.DeviceInfo>.value(
          _FakeDeviceInfo_0(
              this, Invocation.method(#getDeviceDetails, [])))) as _i4
      .Future<_i2.DeviceInfo>);
}
